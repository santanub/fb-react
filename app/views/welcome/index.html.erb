<div id="content"></div>
<script type="text/jsx">
  var CommentBox = React.createClass({
    loadCommentsFromServer: function() {
      $.ajax({
        url: this.props.url,
        dataType: 'json',
        cache: false,
        success: function(data) {
          this.setState({data: data});
        }.bind(this),
        error: function(xhr, status, err) {
          console.error(this.props.url, status, err.toString());
            }.bind(this)
      });
    },
    handleCommentSubmit: function(userComment) {
      if(userComment) {
        var oldComments = this.state.data;
        var newComments = oldComments.concat([userComment]);
        this.setState({data: newComments});

        $.ajax({
          url: this.props.url,
          dataType: 'json',
          type: 'POST',
          data: userComment,
          success: function(data) {
            this.setState({data: data});
          }.bind(this),
          error: function(xhr, status, err) {
            console.error(this.props.url, status, err.toString());
          }.bind(this)
        });
      }
    },
    getInitialState: function() {
      return {data: []};
    },
    componentDidMount: function() {
      this.loadCommentsFromServer();
      setInterval(this.loadCommentsFromServer, this.props.refreshInterval);
    },
    render: function() {
      return (
          <div className="commentBox">
          <h1>Comments</h1>
          <CommentList data={this.state.data} />
          <CommentForm onCommentSubmit={this.handleCommentSubmit} />
          </div>
      );
    }
  });

var CommentList = React.createClass({displayName: 'CommentList',
  render: function() {
    var commentNodes = this.props.data.map(function(comment) {
      return(
          <Comment author={comment.author} likes={comment.like_count} id={comment.id}>
            {comment.comment}
          </Comment>
      );
    });

    return (
        <div className="commentList">
        {commentNodes}
      </div>
    );
  }
});

var CommentForm = React.createClass({displayName: 'CommentForm',
  handleSubmit: function (e) {
       e.preventDefault();
       var author = React.findDOMNode(this.refs.author).value.trim();
       var comment = React.findDOMNode(this.refs.comment).value.trim();
       this.props.onCommentSubmit({author: author, comment: comment});

       if(!author || !comment) {
         return;
       }

       React.findDOMNode(this.refs.author).value = '';
       React.findDOMNode(this.refs.comment).value = '';
       return;
    },
    render: function() {
      return (
        <form className="commentForm" onSubmit={this.handleSubmit}>
          <input type="text" placeholder="Your Name" ref="author" />
          <input type="text" placeholder="Write something..." ref="comment" />
          <input type="submit" value="Post"/>
        </form>
      );
    }
});

var Comment = React.createClass({displayName: 'Comment',
  handleUpdateLike: function(e) {
    e.preventDefault();
    this.props.likes = ++this.props.likes;

    $.ajax({
      url: '/comments/'+ this.props.id +'/like',
      dataType: 'json',
      type: 'PUT',
      success: function(data) {
        this.setState({data: data});
      }.bind(this),
      error: function(xhr, status, err) {
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });

  },
  render: function() {
    var rawMarkup = marked(this.props.children.toString(), {sanitize: true});
    inlineLikeStyle = { color:'blue', 'marginLeft':'20px' };

    return(
      <div className='comment'>
        <h3 className='commentAuthor'>
          {this.props.author}
        </h3>
        <span dangerouslySetInnerHTML={{__html: rawMarkup}} />
        <span style={inlineLikeStyle}><a href="javascript:;" onClick={this.handleUpdateLike}>like</a>({this.props.likes})</span>
      </div>
    );
  }
});

      var data = [
        { author: "Santanu", comment: "I am Santanu" },
        { author: "Sohini", comment: "I am Sohini" }
      ];

      //var url_data = $.ajax({ type: "GET", url: "http://localhost:4000/comments.json", async: false}).responseText;

React.render(
  <CommentBox url="http://localhost:4000/comments.json" refreshInterval={5000} />,
  document.getElementById('content')
);

</script>

